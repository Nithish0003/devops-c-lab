version: 0.2

phases:
  pre_build:
    commands:
      - sudo wget https://dev.mysql.com/get/mysql80-community-release-el9-4.noarch.rpm
      - sudo yum localinstall mysql80-community-release-el9-4.noarch.rpm -y
      - sudo yum install mysql-server -y
      - sudo dnf install docker -y
      - sudo systemctl start docker.service
  build:
    commands:
         - npm install
         - npm audit fix --force
         - docker build . -t lab:v1
        #  - npm start
      #  - npm clean
      #  - npm compile
      #  - npm test
      #  - npm package
# version: 0.2

# env:
#   parameter-store:
#     DOCKER_REGISTRY_USERNAME: /myapp/docker-credentials/username
#     DOCKER_REGISTRY_PASSWORD: /myapp/docker-credentials/password
#     DOCKER_REGISTRY_URL: /myapp/docker-credentials/docker_registry_url
# phases:
#   install:
#     runtime-versions:
#       python: 3.12
#   pre_build:
#     commands:
#       - pip install -r AWS-Projects/AWS-Continuous-Integration-Demo/simple-python-app/requirements.txt
#   build:
#     commands:
#       - cd AWS-Projects/AWS-Continuous-Integration-Demo/simple-python-app
#       - echo "Building Docker Image"
#       - echo "$DOCKER_REGISTRY_PASSWORD" | docker login -u "$DOCKER_REGISTRY_USERNAME" --password-stdin "$DOCKER_REGISTRY_URL"
#       - docker build -t "$DOCKER_REGISTRY_URL/$DOCKER_REGISTRY_USERNAME/simple-python-flask-app:latest" . 
#       - docker push "$DOCKER_REGISTRY_URL/$DOCKER_REGISTRY_USERNAME/simple-python-flask-app:latest"
#   post_build:
#     commands:
#       - echo "Build is Successful!"